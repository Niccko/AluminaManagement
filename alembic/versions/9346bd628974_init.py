"""init

Revision ID: 9346bd628974
Revises: 
Create Date: 2023-03-24 19:23:54.997059

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '9346bd628974'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('config_parameter',
    sa.Column('parameter_id', sa.Integer(), nullable=False),
    sa.Column('parameter_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('parameter_id'),
    schema='cnf'
    )
    op.create_table('configuration',
    sa.Column('configuration_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('configuration_id'),
    schema='cnf'
    )
    op.create_table('alumina_type',
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('provider_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('type_id'),
    schema='ddl'
    )
    op.create_table('input_source',
    sa.Column('input_source_id', sa.Integer(), nullable=False),
    sa.Column('data_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('input_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('input_source_id'),
    schema='ddl'
    )
    op.create_table('logs',
    sa.Column('log_dt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('log_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('log_dt'),
    schema='ddl'
    )
    op.create_table('config_x_params',
    sa.Column('parameter_id', sa.Integer(), nullable=False),
    sa.Column('configuration_id', sa.Integer(), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['configuration_id'], ['cnf.configuration.configuration_id'], ),
    sa.ForeignKeyConstraint(['parameter_id'], ['cnf.config_parameter.parameter_id'], ),
    sa.PrimaryKeyConstraint('parameter_id', 'configuration_id'),
    schema='cnf'
    )
    op.create_table('bunker',
    sa.Column('bunker_id', sa.Integer(), nullable=False),
    sa.Column('is_aas', sa.Boolean(), nullable=False),
    sa.Column('capacity', sa.Float(), nullable=False),
    sa.Column('input_source_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['input_source_id'], ['ddl.input_source.input_source_id'], ),
    sa.PrimaryKeyConstraint('bunker_id'),
    schema='ddl'
    )
    op.create_table('input',
    sa.Column('measure_dt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('input_source_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['input_source_id'], ['ddl.input_source.input_source_id'], ),
    sa.PrimaryKeyConstraint('measure_dt', 'input_source_id'),
    schema='ddl'
    )
    op.create_table('alumina_feed',
    sa.Column('feed_dt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('bunker_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['bunker_id'], ['ddl.bunker.bunker_id'], ),
    sa.PrimaryKeyConstraint('feed_dt', 'bunker_id'),
    schema='ddl'
    )
    op.create_table('alumina_load',
    sa.Column('load_dt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('bunker_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['bunker_id'], ['ddl.bunker.bunker_id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['ddl.alumina_type.type_id'], ),
    sa.PrimaryKeyConstraint('load_dt', 'bunker_id', 'type_id'),
    schema='ddl'
    )
    op.create_table('bunker_state',
    sa.Column('measure_dt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('bunker_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('is_estimate', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['bunker_id'], ['ddl.bunker.bunker_id'], ),
    sa.PrimaryKeyConstraint('measure_dt', 'bunker_id'),
    schema='ddl'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bunker_state', schema='ddl')
    op.drop_table('alumina_load', schema='ddl')
    op.drop_table('alumina_feed', schema='ddl')
    op.drop_table('input', schema='ddl')
    op.drop_table('bunker', schema='ddl')
    op.drop_table('config_x_params', schema='cnf')
    op.drop_table('logs', schema='ddl')
    op.drop_table('input_source', schema='ddl')
    op.drop_table('alumina_type', schema='ddl')
    op.drop_table('configuration', schema='cnf')
    op.drop_table('config_parameter', schema='cnf')
    # ### end Alembic commands ###
